-- PASSO 5: Seleção Final. Seleciona as colunas de saldo e acumulado, aplicando a ordenação e filtros finais.
SELECT
    NUM_ANO,
    NUM_MES,
    COD_UO,
    COD_FUNCAO,
    COD_SUBFUNCAO,
    COD_PROGRAMA,
    COD_ACAO,
    COD_PO,
    DES_PO,
    COD_ESFERA,
    COD_RESULTADO_EOF,
    COD_ELEMENTO_DESPESA,
    DES_ELEMENTO_DESPESA_ATUAL,
    COD_FONTE,
    IDE_FONTE,
    CO_FONTE_RECURSO,
    DES_FONTE,
    
    -- Valores do Mês (Saldo)
    VLR_DOTACAO_INICIAL_SALDO,
    VLR_AUTORIZADO_SALDO,
    VLR_EMPENHADO_SALDO,
    VLR_LIQUIDADO_SALDO,
    VLR_PAGO_CONTROLE_EMPENHO_SALDO,
    VLR_RP_INSCRITO_MES,
	VLR_RP_NAO_PROC_CANCELADO_SALDO,
    VLR_RP_PROC_CANCELADO_SALDO,
    VLR_RP_PAGO_SALDO,
    VLR_RP_NAO_PROC_A_PAGAR_SALDO,
    VLR_RP_PROC_A_PAGAR_SALDO,
    VLR_PAGAMENTOS_TOTAIS_SALDO,
    
    -- Valores Acumulados
    VLR_DOTACAO_INICIAL_ACUMULADO,
    VLR_AUTORIZADO_ACUMULADO,
    VLR_EMPENHADO_ACUMULADO,
    VLR_LIQUIDADO_ACUMULADO,
    VLR_PAGO_CONTROLE_EMPENHO_ACUMULADO,
    VLR_RP_INSCRITO_ACUMULADO,
	VLR_RP_NAO_PROC_CANCELADO_ACUMULADO,
    VLR_RP_PROC_CANCELADO_ACUMULADO,
    VLR_RP_PAGO_ACUMULADO,
    VLR_RP_NAO_PROC_A_PAGAR_ACUMULADO,
    VLR_RP_PROC_A_PAGAR_ACUMULADO,
    VLR_PAGAMENTOS_TOTAIS_ACUMULADO

FROM
(
    -- PASSO 4: Cálculo dos Valores Acumulados. Aplica a função de janela (SUM OVER) sobre os dados densificados.
    SELECT
        dados_densificados.*,
        
        -- Cálculo dos valores Acumulados
        SUM(VLR_DOTACAO_INICIAL_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_DOTACAO_INICIAL_ACUMULADO,
        SUM(VLR_AUTORIZADO_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_AUTORIZADO_ACUMULADO,
        SUM(VLR_EMPENHADO_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_EMPENHADO_ACUMULADO,
        SUM(VLR_LIQUIDADO_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_LIQUIDADO_ACUMULADO,
        SUM(VLR_PAGO_CONTROLE_EMPENHO_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_PAGO_CONTROLE_EMPENHO_ACUMULADO,
        SUM(VLR_RP_INSCRITO_MES) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_RP_INSCRITO_ACUMULADO,
		SUM(VLR_RP_NAO_PROC_CANCELADO_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_RP_NAO_PROC_CANCELADO_ACUMULADO,
        SUM(VLR_RP_PROC_CANCELADO_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_RP_PROC_CANCELADO_ACUMULADO,
        SUM(VLR_RP_PAGO_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_RP_PAGO_ACUMULADO,
        SUM(VLR_RP_NAO_PROC_A_PAGAR_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_RP_NAO_PROC_A_PAGAR_ACUMULADO,
        SUM(VLR_RP_PROC_A_PAGAR_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_RP_PROC_A_PAGAR_ACUMULADO,
        SUM(VLR_PAGAMENTOS_TOTAIS_SALDO) OVER (PARTITION BY NUM_ANO, COD_UO, COD_FUNCAO, COD_SUBFUNCAO, COD_PROGRAMA, COD_ACAO, COD_PO, DES_PO, COD_ESFERA, COD_RESULTADO_EOF, COD_ELEMENTO_DESPESA, DES_ELEMENTO_DESPESA_ATUAL, COD_FONTE, IDE_FONTE, CO_FONTE_RECURSO, DES_FONTE ORDER BY NUM_MES) AS VLR_PAGAMENTOS_TOTAIS_ACUMULADO
        
    FROM 
    (
        -- PASSO 3: Densificação e Preenchimento de Nulos. Junta a Grade Base (Passo 1) com os Dados Reais (Passo 2) e usa NVL(valor, 0)
        -- para garantir que todos os meses sem movimento recebam zero, tornando o acumulado correto.
        SELECT
            grade.*,
            
            -- Aplica NVL(valor, 0) para o saldo do mês
            NVL(ft.VLR_DOTACAO_INICIAL, 0) AS VLR_DOTACAO_INICIAL_SALDO,
            NVL(ft.VLR_AUTORIZADO, 0) AS VLR_AUTORIZADO_SALDO,
            NVL(ft.VLR_EMPENHADO, 0) AS VLR_EMPENHADO_SALDO,
            NVL(ft.VLR_LIQUIDADO, 0) AS VLR_LIQUIDADO_SALDO,
            NVL(ft.VLR_PAGO_CONTROLE_EMPENHO, 0) AS VLR_PAGO_CONTROLE_EMPENHO_SALDO,
            NVL(ft.VLR_RP_INSCRITO, 0) AS VLR_RP_INSCRITO_MES,
            NVL(ft.VLR_RP_NAO_PROC_CANCELADO, 0) AS VLR_RP_NAO_PROC_CANCELADO_SALDO,
            NVL(ft.VLR_RP_PROC_CANCELADO, 0) AS VLR_RP_PROC_CANCELADO_SALDO,
            NVL(ft.VLR_RP_PAGO, 0) AS VLR_RP_PAGO_SALDO,
            NVL(ft.VLR_RP_NAO_PROC_A_PAGAR, 0) AS VLR_RP_NAO_PROC_A_PAGAR_SALDO,
            NVL(ft.VLR_RP_PROC_A_PAGAR, 0) AS VLR_RP_PROC_A_PAGAR_SALDO,
            NVL(ft.VLR_PAGAMENTOS_TOTAIS, 0) AS VLR_PAGAMENTOS_TOTAIS_SALDO
            
        FROM
        (
            -- PASSO 1: Criação da Grade Base Completa (Dimensões x Meses).
            -- Combina todas as dimensões únicas que existem no ano com a lista de 12 meses.
            SELECT
                dimensoes.*,
                meses.NUM_MES
            FROM
            (
                -- Seleciona todas as combinações únicas de dimensões que existem no ano.
                SELECT DISTINCT
                    T1.NUM_ANO,
                    T2.COD_UO,
                    T3.COD_FUNCAO,
                    T4.COD_SUBFUNCAO,
                    T5.COD_PROGRAMA,
                    T6.COD_ACAO,
                    T7.COD_PO, T7.DES_PO,
                    T8.COD_ESFERA,
                    T9.COD_RESULTADO_EOF,
                    T10.COD_ELEMENTO_DESPESA, T10.DES_ELEMENTO_DESPESA_ATUAL,
                    T11.COD_FONTE, T11.IDE_FONTE,
                    CASE
                        WHEN SUBSTR(T11.COD_FONTE, 1, 1) = '0'
                            THEN SUBSTR(T11.COD_FONTE, 3)
                        ELSE SUBSTR(T11.COD_FONTE, 2)
                    END AS CO_FONTE_RECURSO,
                    T11.DES_FONTE
                FROM
                    USR_DW_EXEC_ORCAMENTARIA.FT_EXEC_ORCAMENTARIA T1,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_UO T2,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_FUNCAO T3,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_SUBFUNCAO T4,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_PROGRAMA T5,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_ACAO_SUBTITULO T6,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_PO T7,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_ESFERA T8,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_RESULTADO_EOF T9,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_ELEMENTO_DESPESA T10,
                    USR_DW_EXEC_ORCAMENTARIA.DIM_FONTE T11
                WHERE
                    T3.IDE_FUNCAO = T1.IDE_FUNCAO
                    AND T4.IDE_SUBFUNCAO = T1.IDE_SUBFUNCAO
                    AND T5.IDE_PROGRAMA = T1.IDE_PROGRAMA
                    AND T6.IDE_ACAO_SUBTITULO = T1.IDE_ACAO_SUBTITULO
                    AND T2.IDE_UO = T1.IDE_UO
                    AND T8.IDE_ESFERA = T1.IDE_ESFERA
                    AND T11.IDE_FONTE = T1.IDE_FONTE
                    AND T10.IDE_ELEMENTO_DESPESA = T1.IDE_ELEMENTO_DESPESA
                    AND T9.IDE_RESULTADO_EOF = T1.IDE_RESULTADO_EOF
                    AND T7.IDE_PO = T1.IDE_PO
                    AND T1.NUM_ANO = TO_CHAR(SYSDATE, 'YYYY') -- Filtro principal do ano (Ajuste o ano conforme a necessidade)
            ) dimensoes
            CROSS JOIN
            (
                -- Gera uma tabela com os meses de 0 a 12.
                SELECT (LEVEL - 1) AS NUM_MES
				FROM DUAL
				CONNECT BY LEVEL <= 14
            ) meses
        ) grade
        LEFT JOIN
        (
            -- PASSO 2: Preparação dos Dados Reais da Despesa. 
            -- Agrupa os dados reais da FATO por mês e dimensão para simplificar o JOIN (Passo 3).
            SELECT
                T1.NUM_ANO, T1.NUM_MES, T2.COD_UO, T3.COD_FUNCAO, T4.COD_SUBFUNCAO, T5.COD_PROGRAMA, T6.COD_ACAO, T7.COD_PO, T7.DES_PO, T8.COD_ESFERA, T9.COD_RESULTADO_EOF, T10.COD_ELEMENTO_DESPESA, T10.DES_ELEMENTO_DESPESA_ATUAL, T11.COD_FONTE, T11.IDE_FONTE,
                CASE WHEN SUBSTR(T11.COD_FONTE, 1, 1) = '0' THEN SUBSTR(T11.COD_FONTE, 3) ELSE SUBSTR(T11.COD_FONTE, 2) END AS CO_FONTE_RECURSO,
                T11.DES_FONTE,
                SUM(T1.VLR_DOTACAO_INICIAL) AS VLR_DOTACAO_INICIAL,
                SUM(T1.VLR_AUTORIZADO) AS VLR_AUTORIZADO,
                SUM(T1.VLR_EMPENHADO) AS VLR_EMPENHADO,
                SUM(T1.VLR_LIQUIDADO) AS VLR_LIQUIDADO,
                SUM(T1.VLR_PAGO_CONTROLE_EMPENHO) AS VLR_PAGO_CONTROLE_EMPENHO,
                SUM(T1.VLR_RP_INSCRITO) AS VLR_RP_INSCRITO,
                SUM(T1.VLR_RP_NAO_PROC_CANCELADO) AS VLR_RP_NAO_PROC_CANCELADO,
                SUM(T1.VLR_RP_PROC_CANCELADO) AS VLR_RP_PROC_CANCELADO,
                SUM(T1.VLR_RP_PAGO) AS VLR_RP_PAGO,
                SUM(T1.VLR_RP_NAO_PROC_A_PAGAR) AS VLR_RP_NAO_PROC_A_PAGAR,
                SUM(T1.VLR_RP_PROC_A_PAGAR) AS VLR_RP_PROC_A_PAGAR,
                SUM(T1.VLR_PAGAMENTOS_TOTAIS) AS VLR_PAGAMENTOS_TOTAIS
            FROM
                USR_DW_EXEC_ORCAMENTARIA.FT_EXEC_ORCAMENTARIA T1,
                USR_DW_EXEC_ORCAMENTARIA.DIM_UO T2,
                USR_DW_EXEC_ORCAMENTARIA.DIM_FUNCAO T3,
                USR_DW_EXEC_ORCAMENTARIA.DIM_SUBFUNCAO T4,
                USR_DW_EXEC_ORCAMENTARIA.DIM_PROGRAMA T5,
                USR_DW_EXEC_ORCAMENTARIA.DIM_ACAO_SUBTITULO T6,
                USR_DW_EXEC_ORCAMENTARIA.DIM_PO T7,
                USR_DW_EXEC_ORCAMENTARIA.DIM_ESFERA T8,
                USR_DW_EXEC_ORCAMENTARIA.DIM_RESULTADO_EOF T9,
                USR_DW_EXEC_ORCAMENTARIA.DIM_ELEMENTO_DESPESA T10,
                USR_DW_EXEC_ORCAMENTARIA.DIM_FONTE T11
            WHERE
                T3.IDE_FUNCAO = T1.IDE_FUNCAO
                AND T4.IDE_SUBFUNCAO = T1.IDE_SUBFUNCAO
                AND T5.IDE_PROGRAMA = T1.IDE_PROGRAMA
                AND T6.IDE_ACAO_SUBTITULO = T1.IDE_ACAO_SUBTITULO
                AND T2.IDE_UO = T1.IDE_UO
                AND T8.IDE_ESFERA = T1.IDE_ESFERA
                AND T11.IDE_FONTE = T1.IDE_FONTE
                AND T10.IDE_ELEMENTO_DESPESA = T1.IDE_ELEMENTO_DESPESA
                AND T9.IDE_RESULTADO_EOF = T1.IDE_RESULTADO_EOF
                AND T7.IDE_PO = T1.IDE_PO
                AND T1.NUM_ANO = TO_CHAR(SYSDATE, 'YYYY') -- Deve ser o mesmo ano do filtro do Passo 1
            GROUP BY
                T1.NUM_ANO, T1.NUM_MES, T2.COD_UO, T3.COD_FUNCAO, T4.COD_SUBFUNCAO, T5.COD_PROGRAMA, T6.COD_ACAO, T7.COD_PO, T7.DES_PO, T8.COD_ESFERA, T9.COD_RESULTADO_EOF, T10.COD_ELEMENTO_DESPESA, T10.DES_ELEMENTO_DESPESA_ATUAL, T11.COD_FONTE, T11.IDE_FONTE,
                CASE WHEN SUBSTR(T11.COD_FONTE, 1, 1) = '0' THEN SUBSTR(T11.COD_FONTE, 3) ELSE SUBSTR(T11.COD_FONTE, 2) END, T11.DES_FONTE
        ) ft
            ON grade.NUM_ANO = ft.NUM_ANO
            AND grade.NUM_MES = ft.NUM_MES
            AND grade.COD_UO = ft.COD_UO
            AND grade.COD_FUNCAO = ft.COD_FUNCAO
            AND grade.COD_SUBFUNCAO = ft.COD_SUBFUNCAO
            AND grade.COD_PROGRAMA = ft.COD_PROGRAMA
            AND grade.COD_ACAO = ft.COD_ACAO
            AND grade.COD_PO = ft.COD_PO
            AND grade.COD_ESFERA = ft.COD_ESFERA
            AND grade.COD_RESULTADO_EOF = ft.COD_RESULTADO_EOF
            AND grade.COD_ELEMENTO_DESPESA = ft.COD_ELEMENTO_DESPESA
            AND grade.COD_FONTE = ft.COD_FONTE
    ) dados_densificados
) resultado_final

ORDER BY
    NUM_ANO,
    NUM_MES,
    COD_UO,
    COD_FUNCAO,
    COD_SUBFUNCAO,
    COD_PROGRAMA,
    COD_ACAO,
    COD_PO,
    COD_ELEMENTO_DESPESA,
    COD_FONTE   